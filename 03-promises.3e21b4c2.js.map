{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEvCF,EAAQG,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAGF,IAFA,IAAIC,EAAQC,OAAOP,EAAQQ,MAAMC,OAExBC,EAAI,EAAGA,GAAKV,EAAQW,OAAOF,MAAOC,GAAK,GAChCA,EAAGJ,OAYbM,OAAgBC,KAAKC,SAAW,KAXjCC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MACjBV,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANZ,EAAM,M,IAE9Da,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MAClBV,EAAAoB,OAAOI,QAAQ,sBAAqCF,OAAfH,EAAS,QAAYG,OAANZ,EAAM,M,IAE9DF,GAASC,OAAOP,EAAQuB,KAAKd,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  let delay = Number(formRef.delay.value);\n\n  for (let i = 1; i <= formRef.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(formRef.step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","addEventListener","e","preventDefault","delay1","Number","delay","value","i","amount","shouldResolve","Math","random","then","param","position","Notify","success","concat","catch","failure","step"],"version":3,"file":"03-promises.3e21b4c2.js.map"}